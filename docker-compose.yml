version: "3"
services:
  nginx:
    image: nginx:mainline
    container_name: sensitivity-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    depends_on:
      - auth-svc
      - file-svc

  auth-db:
    image: postgres
    container_name: auth-db
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: password

  auth-svc:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    env_file: ./services/auth-service/.env
    environment:
      DATABASE_URI: postgresql://postgres:password@auth-db/postgres
    ports:
      - "8000:8000"
    depends_on:
      - auth-db
    restart: "always"

  file-db:
    image: postgres
    container_name: file-db
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: password

  file-svc:
    build:
      context: ./services/file-service
      dockerfile: Dockerfile
    env_file: ./services/file-service/.env
    environment:
      DATABASE_URI: postgresql://postgres:password@file-db/postgres
      FILE_UPLOAD_DIR: /file-service/data
      CELERY_BROKER_URL: redis://redis-celery:6379/0
    ports:
      - "7000:7000"
    depends_on:
      - file-db
    restart: "always"
    volumes:
      - file-volume:/file-service/data

  redis-celery:
    image: redis:alpine

  celery-beat:
    build:
      context: ./services/file-service
      dockerfile: Dockerfile
    command: celery -A app.run_celery beat -l info
    depends_on:
      - redis-celery
      - file-db
      - file-svc
    environment:
      CELERY_BROKER_URL: redis://redis-celery:6379/0
      DATABASE_URI: postgresql://postgres:password@file-db/postgres
    volumes:
      - file-volume:/file-service/data

  celery-worker:
    build:
      context: ./services/file-service
      dockerfile: Dockerfile
    command: celery -A app.run_celery worker -l info
    depends_on:
      - redis-celery
      - file-db
      - file-svc
    environment:
      CELERY_BROKER_URL: redis://redis-celery:6379/0
      DATABASE_URI: postgresql://postgres:password@file-db/postgres
    volumes:
      - file-volume:/file-service/data

volumes:
  file-volume:
